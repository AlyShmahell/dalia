t60.

:- dynamic state/1.

senseE(X) :> \+ state(_), assert(state(X)), reportA(generic(X)), !.
senseE(X) :> state(_), retract(state(_)), assert(state(X)), reportA(generic(X)).

alarms(X) :- state(_), state(X), write('testing '), write(X), nl, member(X, [smoke, fire, earthquake]), write('done testing '), write(X), nl.
alarmsI(X) :> messageA(coordinator, send_message(alarm(X), Me)), retract(state(_)).

falarms(X) :- state(_), state(X), write('testing '), write(X), nl, \+ member(X, [smoke, fire, earthquake]), write('done testing '), write(X), nl.
falarmsI(X) :> reportA(falarm(X)), retract(state(_)).

reportA(X) :> messageA(logger, send_message(X, Me)).