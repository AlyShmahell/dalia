t60.

:- dynamic state/2.

senseE(X, L) :> \+ state(_,_), assert(state(X, L)), logA(generic(X, L)), !.
senseE(X, L) :> state(_,_), retract(state(_,_)), assert(state(X, L)), logA(generic(X, L)).

alarms(X, L) :- state(_,_), state(X, L), write('testing '), write(X), nl, member(X, [smoke, fire, earthquake]), write('done testing '), write(X), nl.
alarmsI(X, L) :> messageA(coordinator, send_message(alarm(X, L), Me)), retract(state(_,_)).

falarms(X, L) :- state(_,_), state(X, L), write('testing '), write(X), nl, \+ member(X, [smoke, fire, earthquake]), write('done testing '), write(X), nl.
falarmsI(X, L) :> logA(falarm(X, L)), retract(state(_,_)).

logA(X) :> messageA(logger, send_message(X, Me)).